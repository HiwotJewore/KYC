{"filter":false,"title":"app.py","tooltip":"/UnzipLambdaFunction/app.py","undoManager":{"mark":0,"position":0,"stack":[[{"start":{"row":0,"column":20},"end":{"row":39,"column":0},"action":"insert","lines":["\"Lambda function for unzipping application documents\"","import os","import zipfile","import boto3","","unzipped_dir = \"/tmp/unzipped/\"","unzipped_s3_prefix = \"unzipped/\"","s3 = boto3.client('s3')","","def unzip_object(bucket, key):","    \"\"\"Download .zip file, extract, delete the .zip archive from Lambda /tmp storage, and return individual file names\"\"\"","    zip_name = os.path.basename(key)","    zip_fullpath = f'/tmp/{zip_name}'","    s3.download_file(bucket, key, zip_fullpath)","    with zipfile.ZipFile(zip_fullpath, 'r') as zip_ref:","        zip_ref.extractall(unzipped_dir)","    os.remove(zip_fullpath)","","    zipped_files = os.listdir(unzipped_dir)","    return zipped_files","","def lambda_handler(event, context):","    \"Unzip application documents and upload to the unzipped prefix\"","    bucket = event['detail']['bucket']['name']","    key = event['detail']['object']['key']","","    # Unzip the object from the event.","    files_list = unzip_object(bucket, key)","","    # Retrieve app_uuid from .zip file.","    app_uuid = os.path.basename(key).replace(\".zip\", \"\")","","    # Upload files to the unzipped location.","    for file in files_list:","        s3.upload_file(unzipped_dir + file, bucket, unzipped_s3_prefix + file)","","    return {","        \"app_uuid\": app_uuid","    }",""],"id":2}]]},"ace":{"folds":[],"scrolltop":79,"scrollleft":0,"selection":{"start":{"row":39,"column":0},"end":{"row":39,"column":0},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1750919724940,"hash":"5b55d423d94d10667017f9c70544e631e9809c51"}